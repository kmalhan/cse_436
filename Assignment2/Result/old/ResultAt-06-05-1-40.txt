
Assignment2 Test Run

==Platform that code is running==
Linux lennon.secs.oakland.edu 2.6.32-504.30.3.el6.x86_64 #1 SMP Tue Jul 14 11:18:03 CDT 2015 x86_64 x86_64 x86_64 GNU/Linux

================ sum.c thread = 1 ==================

======================================================================================================
	Sum 10000000 numbers with 1 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:				30.999899	645.163394
Sum Parallel:			29.999971	666.667302
Sum Parallel For:		29.999971	666.667302

================ sum.c thread = 2 ==================

======================================================================================================
	Sum 10000000 numbers with 2 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:				30.000210	666.662004
Sum Parallel:			16.999960	1176.473360
Sum Parallel For:		14.999866	1333.345201

================ sum.c thread = 4 ==================

======================================================================================================
	Sum 10000000 numbers with 4 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:				31.000137	645.158432
Sum Parallel:			7.999897	2500.032187
Sum Parallel For:		7.999897	2500.032187

================ sum.c thread = 8 ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:				29.999971	666.667302
Sum Parallel:			5.000114	3999.908449
Sum Parallel For:		3.999949	5000.064374

================ mm.c thread = 1 ==================

	C[1024][1024] = A[1024][1024] * B[1024][1024] with 1 tasks
======================================================================================================
	C[1024][1024] = A[1024][1024] * B[1024][1024] with 1 tasks
------------------------------------------------------------------------------------------------------
Performance:				Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
mm:				6905.000210	155.502070
mm_parallel_row:		9394.999981	114.288646
mm_parallel_col:		9478.999853	113.275856
mm_parallel_rowcol:		9255.000114	116.017484
mm_parallel_for_row:		9167.000055	117.131212
mm_parallel_for_col:		9166.999817	117.131215
mm_parallel_for_rowcol:		9164.999962	117.156773

================ mm.c thread = 2 ==================

	C[1024][1024] = A[1024][1024] * B[1024][1024] with 2 tasks
======================================================================================================
	C[1024][1024] = A[1024][1024] * B[1024][1024] with 2 tasks
------------------------------------------------------------------------------------------------------
Performance:				Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
mm:				6859.999895	156.522134
mm_parallel_row:		4681.999922	229.334012
mm_parallel_col:		4725.000143	227.246940
mm_parallel_rowcol:		4730.000019	227.006727
mm_parallel_for_row:		4690.000057	228.942817
mm_parallel_for_col:		4687.999964	229.040493
mm_parallel_for_rowcol:		4695.999861	228.650310

================ mm.c thread = 4 ==================

	C[1024][1024] = A[1024][1024] * B[1024][1024] with 4 tasks
======================================================================================================
	C[1024][1024] = A[1024][1024] * B[1024][1024] with 4 tasks
------------------------------------------------------------------------------------------------------
Performance:				Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
mm:				6941.999912	154.673270
mm_parallel_row:		2411.999941	445.166605
mm_parallel_col:		2413.000107	444.982087
mm_parallel_rowcol:		2413.000107	444.982087
mm_parallel_for_row:		2407.999992	445.906075
mm_parallel_for_col:		2394.999981	448.326444
mm_parallel_for_rowcol:		2414.999962	444.613599

================ mm.c thread = 8 ==================

	C[1024][1024] = A[1024][1024] * B[1024][1024] with 8 tasks
======================================================================================================
	C[1024][1024] = A[1024][1024] * B[1024][1024] with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:				Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
mm:				6863.999844	156.430922
mm_parallel_row:		1251.000166	858.306700
mm_parallel_col:		1266.000032	848.137280
mm_parallel_rowcol:		1259.999990	852.176057
mm_parallel_for_row:		1251.999855	857.621364
mm_parallel_for_col:		1256.000042	854.889959
mm_parallel_for_rowcol:		1249.000072	859.681154

================ sum.c static ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:			29.999971	666.667302
Sum Parallel:			5.000114	3999.908449
Sum Parallel For:		3.999949	5000.064374

================ sum.c static, 2000 ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:			29.999971	666.667302
Sum Parallel:			4.999876	4000.099185
Sum Parallel For:		5.000114	3999.908449

================ sum.c static, 200 ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:			29.999971	666.667302
Sum Parallel:			5.000114	3999.908449
Sum Parallel For:		6.999969	2857.155313

================ sum.c static, 20 ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:			30.999899	645.163394
Sum Parallel:			5.000114	3999.908449
Sum Parallel For:		7.999897	2500.032187

================ sum.c dynamic, 2000 ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:			29.999971	666.667302
Sum Parallel:			5.000114	3999.908449
Sum Parallel For:		3.999949	5000.064374

================ sum.c dynamic, 200 ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:			31.000137	645.158432
Sum Parallel:			4.999876	4000.099185
Sum Parallel For:		8.000135	2499.957681

================ sum.c dynamic, 20 ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:			30.999899	645.163394
Sum Parallel:			5.000114	3999.908449
Sum Parallel For:		59.000015	338.982963

================ sum.c guided, 200000 ==================

======================================================================================================
	Sum 10000000 numbers with 8 tasks
------------------------------------------------------------------------------------------------------
Performance:		Runtime (ms)	 MFLOPS 
------------------------------------------------------------------------------------------------------
Sum Serial:			30.999899	645.163394
Sum Parallel:			5.000114	3999.908449
Sum Parallel For:		3.999949	5000.064374

